version: '3.8'

services:
  happy-web-custom:
    build:
      context: https://github.com/LymanBE/happy-fork.git
      dockerfile_inline: |
        FROM node:20-alpine
        
        # Install dependencies
        RUN apk add --no-cache git python3 make g++
        
        # Clone your fork
        RUN git clone https://github.com/LymanBE/happy-fork.git /app
        WORKDIR /app
        
        # Install dependencies
        RUN npm install --legacy-peer-deps --ignore-scripts
        RUN npm install -g patch-package
        RUN npx patch-package || true
        
        # Build for web
        RUN npm run build:web || true
        
        EXPOSE 3000
        CMD ["npm", "run", "web"]
    
    container_name: happy-web-custom
    restart: unless-stopped
    ports:
      - "8082:3000"
    
    environment:
      # Happy server configuration
      - EXPO_PUBLIC_HAPPY_SERVER_URL=https://api.cluster-fluster.com
      
      # Custom ElevenLabs configuration (add your keys here)
      - EXPO_PUBLIC_ELEVENLABS_AGENT_ID=${ELEVENLABS_AGENT_ID:-}
      - EXPO_PUBLIC_ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY:-}
      
      # Future OpenAI configuration (when implemented)
      # - EXPO_PUBLIC_VOICE_PROVIDER=openai
      # - EXPO_PUBLIC_OPENAI_API_KEY=${OPENAI_API_KEY:-}
      # - EXPO_PUBLIC_OPENAI_MODEL=gpt-4-realtime
      
      - NODE_ENV=production
    
    volumes:
      - happy-custom-data:/app
    
    networks:
      - dokploy-network
    
    labels:
      - "dokploy.enabled=true"
      - "dokploy.name=happy-custom"
      - "dokploy.description=Happy with custom voice API support"
      - "dokploy.project=happy-assistant"
      - "dokploy.domain=happy.${TAILNET_DOMAIN:-local}"
      - "dokploy.port=3000"

volumes:
  happy-custom-data:

networks:
  dokploy-network:
    external: true