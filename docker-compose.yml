version: '3.8'
services:
  happy-web:
    build:
      context: ./happy-fork
      dockerfile_inline: |
        FROM node:20-alpine

        # Install dependencies
        RUN apk add --no-cache git python3 make g++

        # Copy local fork code
        WORKDIR /app
        COPY . /app

        # Install dependencies
        RUN npm install --legacy-peer-deps --ignore-scripts
        RUN npm install -g patch-package
        RUN npx patch-package || true

        # Build for web
        RUN npm run build:web || true

        EXPOSE 3000
        CMD ["npm", "run", "web"]
    # NO container_name - Dokploy manages this
    restart: unless-stopped
    ports:
      - 3000
    environment:
      # Happy server configuration
      - EXPO_PUBLIC_HAPPY_SERVER_URL=https://api.cluster-fluster.com
      # Custom ElevenLabs configuration (add your keys here)
      - EXPO_PUBLIC_ELEVENLABS_AGENT_ID=${ELEVENLABS_AGENT_ID:-}
      - EXPO_PUBLIC_ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY:-}
      # Future OpenAI configuration (when implemented)
      # - EXPO_PUBLIC_VOICE_PROVIDER=openai
      # - EXPO_PUBLIC_OPENAI_API_KEY=${OPENAI_API_KEY:-}
      # - EXPO_PUBLIC_OPENAI_MODEL=gpt-4-realtime
      - NODE_ENV=production
    volumes:
      - happy-custom-data:/app
      - ../files/agent-configs:/app/agent_configs:ro
      - ../files/logs:/app/logs
    networks:
      - dokploy-network
    labels:
      # Traefik routing configuration
      - "traefik.enable=true"
      - "traefik.http.routers.happy-web.rule=Host(`happy.100.119.254.98.nip.io`)"
      - "traefik.http.routers.happy-web.entrypoints=websecure"
      - "traefik.http.routers.happy-web.tls.certResolver=letsencrypt"
      - "traefik.http.services.happy-web.loadbalancer.server.port=3000"
      # HTTP redirect to HTTPS
      - "traefik.http.routers.happy-web-http.rule=Host(`happy.100.119.254.98.nip.io`)"
      - "traefik.http.routers.happy-web-http.entrypoints=web"
      - "traefik.http.routers.happy-web-http.middlewares=redirect-to-https"
      # Middleware for HTTPS redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
volumes:
  happy-custom-data:
networks:
  dokploy-network:
    external: true
